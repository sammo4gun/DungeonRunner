(define (problem door)
  (:domain door)
  (:requirements :expression-variables)
  (:objects knight evil_knight prince - character
            bedroom armory hallway cell - room)
  (:init (intends evil_knight (not (doorOpen)))
         (adjacent hallway bedroom)
         (adjacent gatehouse hallway)
         (adjacent armory gatehouse)
         (intends evil_knight (has evil_knight axe))
         (has knight key)
         (at evil_knight gatehouse)
         (in axe armory)
         (adjacent gatehouse armory)
         (adjacent hallway gatehouse)
         (adjacent hallway cell)
         (intends evil_knight (has evil_knight key))
         (at knight gatehouse)
         (adjacent cell hallway)
         (intends knight (doorOpen))
         (adjacent bedroom hallway)
         (had prince key)
         (intends prince (has knight key))
         (had knight key)
         (at prince hallway))
  (:goal (and (has knight axe)
              (doorOpen)))
  (:protagonist knight)

  (:bardichegoal
   (good 
    (and (has knight key) (doorOpen))
    (and (has knight axe) (doorOpen))
   )
   (bad 
    (and (has evil_knight key) (has evil_knight axe))
   )
  )
)